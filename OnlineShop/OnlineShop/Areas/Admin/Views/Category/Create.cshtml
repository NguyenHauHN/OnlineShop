@model Model.EF.Category
@{
    ViewBag.Title = "Thêm mới Danh mục";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var listCategory = (List<Model.EF.Category>)ViewBag.ListCategory;
}

@section breadcrumb {
    <section class="content-header">
        <h4>Quản lý Danh mục</h4>
        <ol class="breadcrumb">
            <li><a href="/Admin/Home"><i class="fa fa-dashboard"></i> Trang chủ</a></li>
            <li><a href="/Admin/Category/Index">Quản lý Danh mục</a></li>
            <li class="active">Thêm mới</li>
        </ol>
    </section>
}
<section class="content">
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Thông tin Danh mục mới</h3>
        </div>
        <!-- /.box-header -->
        <!-- form start -->
        <div class="box-body ">
            <div class="row col-lg-12">
                    @using (Html.BeginForm("Create", "Category", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <fieldset>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Tên danh mục</label>
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tên danh mục", @autofocus = "autofocus" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Meta Title</label>
                                        @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control", @placeholder = "MetaTitle" } })
                                        @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Mô tả</label>
                                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Tag</label>
                                        @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tag" } })
                                        @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Thứ tự hiển thị</label>
                                        @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control", @placeholder = "Thứ tự hiển thị" } })
                                        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Danh mục cha</label>
                                        @Html.DropDownListFor(model => model.ParentID, new SelectList(listCategory,
                               "ID", "Name"), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputPassword1">Trạng thái</label>
                                        <div class="row col-lg-12">
                                            <div class="radio col-lg-5">
                                                @Html.RadioButtonFor(model => model.Status, "1", new { @checked = true })
                                                @Html.Label("Hoạt động")

                                            </div>
                                            <div class="radio col-lg-5 radio-second">
                                                @Html.RadioButtonFor(model => model.Status, "0", false)
                                                @Html.Label("Đã khóa")
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>

                        <div class="row wrap-button-add">
                            <button type="submit" class="btn btn-primary pull-right">Thêm mới</button>
                        </div>
                    }
            </div>

        </div>


        <!-- /.box-body -->


    </div>
</section>


